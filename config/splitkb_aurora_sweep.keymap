/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define LEFT_HAND_KEYS           \
        0  1  2  3  4            \
       10 11 12 13 14            \
       20 21 22 23 24
#define RIGHT_HAND_KEYS          \
        5  6  7  8  9            \
       15 16 17 18 19            \
       25 26 27 28 29
#define THUMB_KEYS 31 32 33 34

&lt {
  flavor = "balanced";
  tapping_term_ms = <180>;
  quick_tap_ms = <250>;
};

&sensors {
  triggers-per-rotation = <40>;
};

&caps_word {
  continue-list = <UNDERSCORE MINUS>;
};

/ {
    combos {
      compatible = "zmk,combos";
      combo_tab {
        timeout-ms = <30>;
        key-positions = <13 12>;
        bindings = <&kp TAB>;
      };

      combo_esc {
        timeout-ms = <30>;
        key-positions = <16 17>;
        bindings = <&kp ESC>;
      };
      combo_capsword {
        timeout-ms = <50>;
        key-positions = <13 16>;
        bindings = <&caps_word>;
      };
      combo_del {
        timeout-ms = <30>;
        key-positions = <6 7>;
        bindings = <&kp DEL>;
      };
      combo_bksp {
        timeout-ms = <30>;
        key-positions = <2 3>;
        bindings = <&kp BKSP>;
      };
    };
    
    behaviors {
        lht: left_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <170>;
            quick-tap-ms = <220>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;
        };
        rht: right_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <170>;
            quick-tap-ms = <220>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;
        };


        lhit: left_positional_interrupt_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <170>;
            quick-tap-ms = <220>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;
        };
        rhit: right_positional_interrupt_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <170>;
            quick-tap-ms = <220>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;
        };
    };

    keymap {
       compatible = "zmk,keymap";

       default_layer {
        sensor-bindings = <&inc_dec_kp UP DOWN>;
        bindings = <
        &kp Q        &kp W             &kp E           &kp R            &kp T                 &kp Y        &kp U            &kp I           &kp O           &kp P
        &kp A        &lht LALT S       &lht LCTL D     &lhit LSFT F     &lht LGUI G           &rht LGUI H  &rhit LSFT J     &rht LCTL K     &rht LALT L     &kp SCLN
        &kp Z        &kp X             &kp C           &kp V            &kp B                 &kp N        &kp M            &kp CMMA        &kp DOT         &kp SLASH
                                                       &kp BKSP         &mo 1                 &lt 2 RET    &lt 3 SPC
        >;
       };

       left_layer {
        bindings = <
        &kp LBKT     &kp QUOT          &kp MINUS       &kp GT           &kp RBKT              &kp DEL      &kp NUM_7        &kp NUM_8       &kp NUM_9       &kp EQUAL
        &kp LPRN     &lht LALT GRAVE   &lht LCTL GT    &lhit LSFT LT    &lht LGUI RPRN        &kp LGUI     &rhit LSFT NUM_4 &rht LCTL NUM_5 &rht LALT NUM_6 &kp BSLH
        &trans       &kp TILDE         &trans          &trans           &trans                &kp NUM_0    &kp NUM_1        &kp NUM_2       &kp NUM_3       &trans
                                                       &trans           &kp LGUI              &trans       &trans
        >;
       };

       right_layer {
        sensor-bindings = <&inc_dec_kp LEFT RIGHT>;
        bindings = <
        &kp RA(W)    &trans            &trans          &trans           &trans                &bt BT_SEL 1 &bt BT_SEL 2     &bt BT_SEL 3    &bt BT_SEL 4    &bt BT_SEL 5
        &kp RA(L)    &trans            &trans          &trans           &trans                &trans       &trans           &trans          &trans          &trans
        &kp RA(Z)    &trans            &trans          &trans           &trans                &trans       &trans           &trans          &trans          &trans
                                                       &trans           &trans                &trans       &trans
        >;
       };

       tri_layer {
        sensor-bindings = <&inc_dec_kp BKSP DEL>;
        bindings = <
        &trans       &trans            &kp UP          &trans           &trans                &trans       &kp F7           &kp F8          &kp F9          &kp F10
        &trans       &lht LALT LEFT    &lht LCTL DOWN  &lht LSFT RIGHT  &trans                &trans       &kp F4           &kp F5          &kp F6          &kp F11
        &bt BT_CLR   &bt BT_NXT        &bt BT_PRV      &trans           &trans                &trans       &kp F1           &kp F2          &kp F3          &kp F12
                                                       &trans           &trans                &trans       &trans
        >;
       };

    };
};
